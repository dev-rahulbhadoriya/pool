{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Fade from '@mui/material/Fade';\nimport { styled } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\nimport { useLocaleText, useUtils } from '../internals/hooks/useUtils';\nimport { PickersFadeTransitionGroup } from './PickersFadeTransitionGroup';\nimport { ArrowDropDown } from '../internals/components/icons';\nimport { PickersArrowSwitcher } from '../internals/components/PickersArrowSwitcher';\nimport { usePreviousMonthDisabled, useNextMonthDisabled } from '../internals/hooks/date-helpers-hooks';\nimport { buildDeprecatedPropsWarning } from '../internals/utils/warning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PickersCalendarHeaderRoot = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: 16,\n  marginBottom: 8,\n  paddingLeft: 24,\n  paddingRight: 12,\n  // prevent jumping in safari\n  maxHeight: 30,\n  minHeight: 30\n});\nconst PickersCalendarHeaderLabel = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return _extends({\n    display: 'flex',\n    maxHeight: 30,\n    overflow: 'hidden',\n    alignItems: 'center',\n    cursor: 'pointer',\n    marginRight: 'auto'\n  }, theme.typography.body1, {\n    fontWeight: theme.typography.fontWeightMedium\n  });\n});\nconst PickersCalendarHeaderLabelItem = styled('div')({\n  marginRight: 6\n});\nconst PickersCalendarHeaderSwitchViewButton = styled(IconButton)({\n  marginRight: 'auto'\n});\nconst PickersCalendarHeaderSwitchView = styled(ArrowDropDown)(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  return _extends({\n    willChange: 'transform',\n    transition: theme.transitions.create('transform'),\n    transform: 'rotate(0deg)'\n  }, ownerState.openView === 'year' && {\n    transform: 'rotate(180deg)'\n  });\n});\nconst deprecatedPropsWarning = buildDeprecatedPropsWarning('Props for translation are deprecated. See https://mui.com/x/react-date-pickers/localization for more information.');\n/**\n * @ignore - do not document.\n */\n\nexport function PickersCalendarHeader(props) {\n  const {\n    components = {},\n    componentsProps = {},\n    currentMonth: month,\n    disabled,\n    disableFuture,\n    disablePast,\n    getViewSwitchingButtonText: getViewSwitchingButtonTextProp,\n    leftArrowButtonText: leftArrowButtonTextProp,\n    maxDate,\n    minDate,\n    onMonthChange,\n    onViewChange,\n    openView: currentView,\n    reduceAnimations,\n    rightArrowButtonText: rightArrowButtonTextProp,\n    views\n  } = props;\n  deprecatedPropsWarning({\n    leftArrowButtonText: leftArrowButtonTextProp,\n    rightArrowButtonText: rightArrowButtonTextProp,\n    getViewSwitchingButtonText: getViewSwitchingButtonTextProp\n  });\n  const localeText = useLocaleText();\n  const leftArrowButtonText = leftArrowButtonTextProp != null ? leftArrowButtonTextProp : localeText.previousMonth;\n  const rightArrowButtonText = rightArrowButtonTextProp != null ? rightArrowButtonTextProp : localeText.nextMonth;\n  const getViewSwitchingButtonText = getViewSwitchingButtonTextProp != null ? getViewSwitchingButtonTextProp : localeText.calendarViewSwitchingButtonAriaLabel;\n  const utils = useUtils();\n  const switchViewButtonProps = componentsProps.switchViewButton || {};\n\n  const selectNextMonth = () => onMonthChange(utils.getNextMonth(month), 'left');\n\n  const selectPreviousMonth = () => onMonthChange(utils.getPreviousMonth(month), 'right');\n\n  const isNextMonthDisabled = useNextMonthDisabled(month, {\n    disableFuture,\n    maxDate\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(month, {\n    disablePast,\n    minDate\n  });\n\n  const handleToggleView = () => {\n    if (views.length === 1 || !onViewChange || disabled) {\n      return;\n    }\n\n    if (views.length === 2) {\n      onViewChange(views.find(view => view !== currentView) || views[0]);\n    } else {\n      // switching only between first 2\n      const nextIndexToOpen = views.indexOf(currentView) !== 0 ? 0 : 1;\n      onViewChange(views[nextIndexToOpen]);\n    }\n  }; // No need to display more information\n\n\n  if (views.length === 1 && views[0] === 'year') {\n    return null;\n  }\n\n  const ownerState = props;\n  return /*#__PURE__*/_jsxs(PickersCalendarHeaderRoot, {\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsxs(PickersCalendarHeaderLabel, {\n      role: \"presentation\",\n      onClick: handleToggleView,\n      ownerState: ownerState,\n      children: [/*#__PURE__*/_jsx(PickersFadeTransitionGroup, {\n        reduceAnimations: reduceAnimations,\n        transKey: utils.format(month, 'monthAndYear'),\n        children: /*#__PURE__*/_jsx(PickersCalendarHeaderLabelItem, {\n          \"aria-live\": \"polite\",\n          ownerState: ownerState,\n          children: utils.format(month, 'monthAndYear')\n        })\n      }), views.length > 1 && !disabled && /*#__PURE__*/_jsx(PickersCalendarHeaderSwitchViewButton, _extends({\n        size: \"small\",\n        as: components.SwitchViewButton,\n        \"aria-label\": getViewSwitchingButtonText(currentView)\n      }, switchViewButtonProps, {\n        children: /*#__PURE__*/_jsx(PickersCalendarHeaderSwitchView, {\n          as: components.SwitchViewIcon,\n          ownerState: ownerState\n        })\n      }))]\n    }), /*#__PURE__*/_jsx(Fade, {\n      in: currentView === 'day',\n      children: /*#__PURE__*/_jsx(PickersArrowSwitcher, {\n        leftArrowButtonText: leftArrowButtonText,\n        rightArrowButtonText: rightArrowButtonText,\n        components: components,\n        componentsProps: componentsProps,\n        onLeftClick: selectPreviousMonth,\n        onRightClick: selectNextMonth,\n        isLeftDisabled: isPreviousMonthDisabled,\n        isRightDisabled: isNextMonthDisabled\n      })\n    })]\n  });\n}","map":{"version":3,"sources":["/home/rahul/Rahul_workspace/pool/node_modules/@mui/x-date-pickers/CalendarPicker/PickersCalendarHeader.js"],"names":["_extends","React","Fade","styled","IconButton","useLocaleText","useUtils","PickersFadeTransitionGroup","ArrowDropDown","PickersArrowSwitcher","usePreviousMonthDisabled","useNextMonthDisabled","buildDeprecatedPropsWarning","jsx","_jsx","jsxs","_jsxs","PickersCalendarHeaderRoot","display","alignItems","marginTop","marginBottom","paddingLeft","paddingRight","maxHeight","minHeight","PickersCalendarHeaderLabel","theme","overflow","cursor","marginRight","typography","body1","fontWeight","fontWeightMedium","PickersCalendarHeaderLabelItem","PickersCalendarHeaderSwitchViewButton","PickersCalendarHeaderSwitchView","ownerState","willChange","transition","transitions","create","transform","openView","deprecatedPropsWarning","PickersCalendarHeader","props","components","componentsProps","currentMonth","month","disabled","disableFuture","disablePast","getViewSwitchingButtonText","getViewSwitchingButtonTextProp","leftArrowButtonText","leftArrowButtonTextProp","maxDate","minDate","onMonthChange","onViewChange","currentView","reduceAnimations","rightArrowButtonText","rightArrowButtonTextProp","views","localeText","previousMonth","nextMonth","calendarViewSwitchingButtonAriaLabel","utils","switchViewButtonProps","switchViewButton","selectNextMonth","getNextMonth","selectPreviousMonth","getPreviousMonth","isNextMonthDisabled","isPreviousMonthDisabled","handleToggleView","length","find","view","nextIndexToOpen","indexOf","children","role","onClick","transKey","format","size","as","SwitchViewButton","SwitchViewIcon","in","onLeftClick","onRightClick","isLeftDisabled","isRightDisabled"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Fade from '@mui/material/Fade';\nimport { styled } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\nimport { useLocaleText, useUtils } from '../internals/hooks/useUtils';\nimport { PickersFadeTransitionGroup } from './PickersFadeTransitionGroup';\nimport { ArrowDropDown } from '../internals/components/icons';\nimport { PickersArrowSwitcher } from '../internals/components/PickersArrowSwitcher';\nimport { usePreviousMonthDisabled, useNextMonthDisabled } from '../internals/hooks/date-helpers-hooks';\nimport { buildDeprecatedPropsWarning } from '../internals/utils/warning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PickersCalendarHeaderRoot = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: 16,\n  marginBottom: 8,\n  paddingLeft: 24,\n  paddingRight: 12,\n  // prevent jumping in safari\n  maxHeight: 30,\n  minHeight: 30\n});\nconst PickersCalendarHeaderLabel = styled('div')(({\n  theme\n}) => _extends({\n  display: 'flex',\n  maxHeight: 30,\n  overflow: 'hidden',\n  alignItems: 'center',\n  cursor: 'pointer',\n  marginRight: 'auto'\n}, theme.typography.body1, {\n  fontWeight: theme.typography.fontWeightMedium\n}));\nconst PickersCalendarHeaderLabelItem = styled('div')({\n  marginRight: 6\n});\nconst PickersCalendarHeaderSwitchViewButton = styled(IconButton)({\n  marginRight: 'auto'\n});\nconst PickersCalendarHeaderSwitchView = styled(ArrowDropDown)(({\n  theme,\n  ownerState\n}) => _extends({\n  willChange: 'transform',\n  transition: theme.transitions.create('transform'),\n  transform: 'rotate(0deg)'\n}, ownerState.openView === 'year' && {\n  transform: 'rotate(180deg)'\n}));\nconst deprecatedPropsWarning = buildDeprecatedPropsWarning('Props for translation are deprecated. See https://mui.com/x/react-date-pickers/localization for more information.');\n/**\n * @ignore - do not document.\n */\n\nexport function PickersCalendarHeader(props) {\n  const {\n    components = {},\n    componentsProps = {},\n    currentMonth: month,\n    disabled,\n    disableFuture,\n    disablePast,\n    getViewSwitchingButtonText: getViewSwitchingButtonTextProp,\n    leftArrowButtonText: leftArrowButtonTextProp,\n    maxDate,\n    minDate,\n    onMonthChange,\n    onViewChange,\n    openView: currentView,\n    reduceAnimations,\n    rightArrowButtonText: rightArrowButtonTextProp,\n    views\n  } = props;\n  deprecatedPropsWarning({\n    leftArrowButtonText: leftArrowButtonTextProp,\n    rightArrowButtonText: rightArrowButtonTextProp,\n    getViewSwitchingButtonText: getViewSwitchingButtonTextProp\n  });\n  const localeText = useLocaleText();\n  const leftArrowButtonText = leftArrowButtonTextProp != null ? leftArrowButtonTextProp : localeText.previousMonth;\n  const rightArrowButtonText = rightArrowButtonTextProp != null ? rightArrowButtonTextProp : localeText.nextMonth;\n  const getViewSwitchingButtonText = getViewSwitchingButtonTextProp != null ? getViewSwitchingButtonTextProp : localeText.calendarViewSwitchingButtonAriaLabel;\n  const utils = useUtils();\n  const switchViewButtonProps = componentsProps.switchViewButton || {};\n\n  const selectNextMonth = () => onMonthChange(utils.getNextMonth(month), 'left');\n\n  const selectPreviousMonth = () => onMonthChange(utils.getPreviousMonth(month), 'right');\n\n  const isNextMonthDisabled = useNextMonthDisabled(month, {\n    disableFuture,\n    maxDate\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(month, {\n    disablePast,\n    minDate\n  });\n\n  const handleToggleView = () => {\n    if (views.length === 1 || !onViewChange || disabled) {\n      return;\n    }\n\n    if (views.length === 2) {\n      onViewChange(views.find(view => view !== currentView) || views[0]);\n    } else {\n      // switching only between first 2\n      const nextIndexToOpen = views.indexOf(currentView) !== 0 ? 0 : 1;\n      onViewChange(views[nextIndexToOpen]);\n    }\n  }; // No need to display more information\n\n\n  if (views.length === 1 && views[0] === 'year') {\n    return null;\n  }\n\n  const ownerState = props;\n  return /*#__PURE__*/_jsxs(PickersCalendarHeaderRoot, {\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsxs(PickersCalendarHeaderLabel, {\n      role: \"presentation\",\n      onClick: handleToggleView,\n      ownerState: ownerState,\n      children: [/*#__PURE__*/_jsx(PickersFadeTransitionGroup, {\n        reduceAnimations: reduceAnimations,\n        transKey: utils.format(month, 'monthAndYear'),\n        children: /*#__PURE__*/_jsx(PickersCalendarHeaderLabelItem, {\n          \"aria-live\": \"polite\",\n          ownerState: ownerState,\n          children: utils.format(month, 'monthAndYear')\n        })\n      }), views.length > 1 && !disabled && /*#__PURE__*/_jsx(PickersCalendarHeaderSwitchViewButton, _extends({\n        size: \"small\",\n        as: components.SwitchViewButton,\n        \"aria-label\": getViewSwitchingButtonText(currentView)\n      }, switchViewButtonProps, {\n        children: /*#__PURE__*/_jsx(PickersCalendarHeaderSwitchView, {\n          as: components.SwitchViewIcon,\n          ownerState: ownerState\n        })\n      }))]\n    }), /*#__PURE__*/_jsx(Fade, {\n      in: currentView === 'day',\n      children: /*#__PURE__*/_jsx(PickersArrowSwitcher, {\n        leftArrowButtonText: leftArrowButtonText,\n        rightArrowButtonText: rightArrowButtonText,\n        components: components,\n        componentsProps: componentsProps,\n        onLeftClick: selectPreviousMonth,\n        onRightClick: selectNextMonth,\n        isLeftDisabled: isPreviousMonthDisabled,\n        isRightDisabled: isNextMonthDisabled\n      })\n    })]\n  });\n}"]},"metadata":{},"sourceType":"module"}