{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Rahul_workspace/pool/src/wallet/Walletindex.js\",\n    _s = $RefreshSig$();\n\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport React, { useState, useEffect } from \"react\";\nimport { providerOptions } from \"./providerOptions\";\nimport { ethers, providers } from \"ethers\";\nimport AccountBalanceWalletIcon from \"@mui/icons-material/AccountBalanceWallet\";\nimport Button from \"@mui/material/Button\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Walletindex(props) {\n  _s();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [web3Modal, setWeb3Modal] = useState(null); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  const [address, setAddress] = useState(\"\"); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  useEffect(() => {\n    const newWeb3Modal = new Web3Modal({\n      cacheProvider: true,\n      // very important\n      network: \"mainnet\",\n      providerOptions\n    });\n    setWeb3Modal(newWeb3Modal);\n  }, []); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  useEffect(() => {\n    // connect automatically and without a popup if user is already connected\n    if (web3Modal && web3Modal.cachedProvider) {\n      connectWallet();\n    }\n  }, [web3Modal]);\n\n  async function connectWallet() {\n    try {\n      const provider = await web3Modal.connect();\n      addListeners(provider);\n      const ethersProvider = new providers.Web3Provider(provider);\n      console.log(ethersProvider);\n      const userAddress = await ethersProvider.getSigner().getAddress();\n      console.log(userAddress);\n      setAddress(userAddress);\n    } catch (err) {\n      console.log(\"ERROR\", err);\n    }\n  }\n\n  async function addListeners(web3ModalProvider) {\n    web3ModalProvider.on(\"accountsChanged\", accounts => {\n      window.location.reload();\n    }); // Subscribe to chainId change\n\n    web3ModalProvider.on(\"chainChanged\", chainId => {\n      window.location.reload();\n    });\n  }\n\n  const refreshState = () => {\n    setAddress();\n  };\n\n  const disconnect = async () => {\n    await web3Modal.clearCachedProvider();\n    refreshState();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !address ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      className: \"connect_btn \",\n      startIcon: /*#__PURE__*/_jsxDEV(AccountBalanceWalletIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 22\n      }, this),\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        class: true,\n        \"aria-label\": \"outlined button group\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          children: [\" \", address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          children: /*#__PURE__*/_jsxDEV(LoginIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Walletindex, \"10kxR3Br1QJ6MoANWd6SduqUKCg=\");\n\n_c = Walletindex;\n\nvar _c;\n\n$RefreshReg$(_c, \"Walletindex\");","map":{"version":3,"sources":["/home/rahul/Rahul_workspace/pool/src/wallet/Walletindex.js"],"names":["Web3Modal","WalletConnectProvider","React","useState","useEffect","providerOptions","ethers","providers","AccountBalanceWalletIcon","Button","LoginIcon","ButtonGroup","Walletindex","props","web3Modal","setWeb3Modal","address","setAddress","newWeb3Modal","cacheProvider","network","cachedProvider","connectWallet","provider","connect","addListeners","ethersProvider","Web3Provider","console","log","userAddress","getSigner","getAddress","err","web3ModalProvider","on","accounts","window","location","reload","chainId","refreshState","disconnect","clearCachedProvider"],"mappings":"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","sourcesContent":["import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport React, { useState, useEffect } from \"react\";\nimport { providerOptions } from \"./providerOptions\";\nimport { ethers, providers } from \"ethers\";\nimport AccountBalanceWalletIcon from \"@mui/icons-material/AccountBalanceWallet\";\nimport Button from \"@mui/material/Button\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\n\nexport default function Walletindex(props) {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [web3Modal, setWeb3Modal] = useState(null);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [address, setAddress] = useState(\"\");\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useEffect(() => {\n    const newWeb3Modal = new Web3Modal({\n      cacheProvider: true, // very important\n      network: \"mainnet\",\n      providerOptions,\n    });\n    setWeb3Modal(newWeb3Modal);\n  }, []);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useEffect(() => {\n    // connect automatically and without a popup if user is already connected\n    if (web3Modal && web3Modal.cachedProvider) {\n      connectWallet();\n    }\n  }, [web3Modal]);\n\n  async function connectWallet() {\n    try {\n      const provider = await web3Modal.connect();\n\n      addListeners(provider);\n\n      const ethersProvider = new providers.Web3Provider(provider);\n      console.log(ethersProvider);\n      const userAddress = await ethersProvider.getSigner().getAddress();\n      console.log(userAddress);\n      setAddress(userAddress);\n    } catch (err) {\n      console.log(\"ERROR\", err);\n    }\n  }\n\n  async function addListeners(web3ModalProvider) {\n    web3ModalProvider.on(\"accountsChanged\", (accounts) => {\n      window.location.reload();\n    });\n\n    // Subscribe to chainId change\n    web3ModalProvider.on(\"chainChanged\", (chainId) => {\n      window.location.reload();\n    });\n  }\n\n  const refreshState = () => {\n    setAddress();\n  };\n\n  const disconnect = async () => {\n    await web3Modal.clearCachedProvider();\n    refreshState();\n  };\n  return (\n    <div>\n      {!address ? (\n        <Button\n          variant=\"contained\"\n          className=\"connect_btn \"\n          startIcon={<AccountBalanceWalletIcon />}\n          onClick={connectWallet}\n        >\n          Connect Wallet\n        </Button>\n      ) : (\n        <div>\n          <ButtonGroup class aria-label=\"outlined button group\">\n            <Button variant=\"text\"> {address}</Button>\n            <Button variant=\"text\">\n              <LoginIcon />\n            </Button>\n          </ButtonGroup>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}